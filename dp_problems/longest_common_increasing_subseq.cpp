/*
УСЛОВИЕ
Даны две последовательности чисел — a и b.
Нужно найти наибольшую общую возрастающую подпоследовательность.
Входные данные
На первой строке целые числа n и m от 1 до 3000 — длины последовательностей.
Вторая строка содержит n целых чисел, задающих первую последовательность. Третья
строка содержит m целых чисел, задающих вторуя последовательность. Все элементы
последовательностей — целые неотрицательные числа, не превосходящие 10^9.
Выходные данные
Выведите одно целое число — длину наибольшей общей возрастающей
подпоследовательности.
*/

#include <iostream>
#include <vector>

using namespace std;

int main() {
  int n;
  int m;
  cin >> n >> m;
  vector<int> a(n + 1);
  vector<int> b(m + 1);
  for (int i = 1; i < n + 1; ++i) {
    cin >> a[i];
  }
  for (int i = 1; i < m + 1; ++i) {
    cin >> b[i];
  }

  vector<vector<int>> dp(n + 1, vector<int>(m + 1));
  for (int i = 1; i < n + 1; ++i) {
    int ind = 0;
    int best = 0;
    for (int j = 1; j < m + 1; ++j) {
      dp[i][j] = dp[i - 1][j];
      if (a[i] == b[j] && dp[i - 1][j] < best + 1) {
        dp[i][j] = best + 1;
      }
      if (a[i] > b[j] && dp[i - 1][j] > best) {
        best = dp[i - 1][j];
      }
    }
  }

  int answ = 0;
  for (int j = 1; j < m + 1; ++j) {
    if (dp[n][j] > answ) answ = dp[n][j];
  }
  cout << answ << endl;
}